#include <iostream>
#include <iomanip>
#include <cmath>
using namespace std;

void zadanie(int a){
    cout << setfill(' ') << setw(14) << "Задание №" << a << endl;
}

//Задание 4
class employee{
    private:
    int nomer;
    float oklad;
    
    public:
    employee(): nomer(0),oklad(0){}
    employee(int nom, float okl): nomer(nom), oklad(okl){}
    void get(){
        cout << "Введите номер сотрудника: "; cin >> nomer;
        cout << "Введите зарплату сотрудника: "; cin >> oklad;
    }
    
    void out(){
        cout << "Номер сотрудника: "<< nomer << endl << "Зарплата сотрудника: "
        << oklad << endl << endl;
    }
};

void z4(){
    zadanie(4);
    employee emp1, emp2, emp3;
    emp1.get(); emp2.get(); emp3.get();
    emp1.out(); emp2.out(); emp3.out();
}

//Задание 5
class date{
    private:
    int month, day, year;
    
    public:
    date(): month(0), day(0), year(0){}
    date(int m, int d, int y): month(m), day(d), year(y){}
    void getdate(){
        char s;
        cout << "Введите дату в формате DD/MM/YY: "; cin >> day >> s >> month
        >> s >> year;
    }
    void showdate(){
        cout << "Дата: " << day << "/" << month << "/" << year << endl;
    }
};

void z5(){
    zadanie(5);
    date dt1;
    dt1.getdate();
    dt1.showdate();
}

//Задание 6
class date6{
    private:
    public:
    int month, day, year;
    date6(): month(0), day(0), year(0){}
    date6(int m, int d, int y): month(m), day(d), year(y){}
};

class employee6{
    private:
    int nomer;
    float oklad;
    date6 datee;
    enum etype {laborer, secretary, manager, accountant, executive, researcher};
    etype d;
    char dolznost;
    
    public:
    employee6(): nomer(0),oklad(0){}
    employee6(int nom, float okl): nomer(nom), oklad(okl){}
    void getemploy(){
        char s;
        cout << "Введите номер сотрудника: "; cin >> nomer;
        cout << "Введите зарплату сотрудника: "; cin >> oklad;
        cout << "Введите дату приема сотрудника на работу в формате DD/MM/YY: ";
        cin >> datee.day >> s >> datee.month >> s >> datee.year;
        cout << "Введите первую букву должности (laborer, secretary, manager," 
        << "accountant, executive, researcher): "; cin >> dolznost;
        switch(dolznost){
            case 'l': d = laborer; break;
            case 's': d = secretary; break;
            case 'm': d = manager; break;
            case 'a': d = accountant; break;
            case 'e': d = executive; break;
            case 'r': d = researcher; break;
        }
    }
    void putemploy(){
        cout << "Номер сотрудника: " << nomer << endl;
        cout << "Зарплата сотрудника: " << oklad << endl;
        cout << "Дата приема сотрудника на работу: " << datee.day << "/"
        << datee.month << "/" << datee.year << endl;
        switch(d){
        case laborer:
            cout << "Название должности: laborer" << endl; break;
        case secretary:
            cout << "Название должности: secretary" << endl; break;
        case manager:
            cout << "Название должности: manager" << endl; break;
        case accountant:
            cout << "Название должности: accountant" << endl; break;
        case executive:
            cout << "Название должности: executive" << endl; break;
        case researcher:
            cout << "Название должности: researcher" << endl; break;
    }
    }
};

void z6(){
    zadanie(6);
    employee6 emp1, emp2, emp3;
    emp1.getemploy(); emp2.getemploy(); emp3.getemploy();
    emp1.putemploy(); emp2.putemploy(); emp3.putemploy();
}

//Задание 7
class angle{
    private:
    int grad;
    float minutes;
    char napr;
    public:
    angle(): grad(0), minutes(0), napr(0){}
    angle(int g, float m, char n): grad(g), minutes(m), napr(n){}
    void getkor(){
        cout << "Введите градусы: "; cin >> grad;
        cout << "Введите минуты: "; cin >> minutes;
        cout << "Введите направление(N,S,W,E): "; cin >> napr;
    }
    void showkor(){
        cout << grad << '\xF8' << minutes << "'" << napr << endl;
    }
};

void z7(){
    zadanie(7);
    angle angl1;
    char o;
    do{
        angl1.getkor();
        angl1.showkor();
        cout << "Еще раз? (y/n): "; cin >> o; 
    }
    while(o!='n');
}

//Задание 8
class poryad_nom{
    private:
    int number;
    static int poryad;
    public:
    poryad_nom(){
        poryad++;
        number = poryad;
    }
    void shownum(){
        cout << "Мой порядковый номер: " << number << endl;
    }
};
int poryad_nom::poryad = 0;

void z8(){
    zadanie(8);
    poryad_nom nom1,nom2,nom3;
    nom1.shownum(); nom2.shownum(); nom3.shownum();
}

//Задание 9
class fraction{
    private:
    int ch,zn;
    public:
    fraction(): ch(0), zn(0){}
    fraction(int c, int z): ch(c), zn(z){}
    void putdr(){
        char s;
        cout << "Введите дробь: "; cin >> ch >> s >> zn;
    }
    void showdr(){
        cout << "Дробь: " << ch << "/" << zn << endl;
    }
    void summa(fraction f1, fraction f2){
        ch = f1.ch*f2.zn+f2.ch*f1.zn;
        zn = f1.zn*f2.zn;
    }
    void showrez(){
        cout << "Сумма дробей: " << ch << "/" << zn << endl;
    }
};

void z9(){
    zadanie(9);
    char o;
    fraction fr1, fr2, frsum;
    do{
        fr1.putdr(); fr2.putdr();
        fr1.showdr(); fr2.showdr();
        frsum.summa(fr1, fr2);
        frsum.showrez();
        cout << "Еще раз? (y/n) "; cin >> o;
    }
    while(o != 'n');
}

//Задание 10
class ship{
    private:
    int numberk;
    static int pork;
    int gradk;
    float minutesk;
    char naprk;
    public:
    ship(): gradk(0), minutesk(0), naprk(0){
        pork++;
        numberk = pork;
    }
    ship(int gr, float min, char nap): gradk(gr), minutesk(min), naprk(nap){}
    void getzn(){
        cout << "Введите градусы: "; cin >> gradk;
        cout << "Введите минуты: "; cin >> minutesk;
        cout << "Введите напрвление(N,S,W,E): "; cin >> naprk;
    }
    void showzn(){
        cout << "Порядковый номер корабля: " << numberk << endl << "Координаты"
        << " корабля: " << gradk << '\xF8' << minutesk << "'" << naprk << endl;
    }
};

int ship::pork = 0;
void z10(){
    zadanie(10);
    ship sh1, sh2, sh3;
    sh1.getzn(); sh2.getzn(); sh3.getzn();
    sh1.showzn(); sh2.showzn(); sh3.showzn();
}

int main(){
    z4(); z5(); z6(); z7(); z8(); z9();
    z10();
}
