#include <iostream>
#include <cmath>
using namespace std;

void zadanie(int a){
    cout << endl << "Задание №" << a << endl;
}

//Задание 4
void fillArray(int* a, int n){
	for (int i = 0; i < n; i++)
	{
		cout << "Введите элемент массива с индексом " << i << ": "; cin >> a[i];
	}
	cout << endl;
}

void maxInt(int* a, int n){
	int max_i = 0, max_value = 0;

	for (int i = 0; i < n; i++)
	{
		if (a[i] > max_value)
		{
			max_i = i;
			max_value = a[i];
		}
	}
	cout << "Максимальное значение: " << max_value << endl;
	cout << "Его индекс: " << max_i << endl;
}

void z4(){
	zadanie(4);

	int a[5];
	int* p = a;
	fillArray(p, 5);
	maxInt(p, 5);
}

//Задание 5
class Fraction{
private:
	int ch, zn;
public:
	void set()
	{
		char s;
		cout << "Введите дробь: "; cin >> ch >> s >> zn;
	}
	int get_ch()
	{
		return ch;
	}
	int get_zn()
	{
		return zn;
	}
};

void z5(){
	zadanie(5);

	int kd;
	cout << "Введите количество дробей: "; cin >> kd;
	Fraction* arr_for_fraction = new Fraction[kd];
	for (int i = 0; i < kd; i++)
	{
		cout << i + 1 << " дробь\n";
		arr_for_fraction[i].set();
		cout << endl;
	}
	double ch = 0.0, zn = 0.0, sum = 0.0;
	for (int i = 0; i < kd; i++)
	{
		ch = arr_for_fraction[i].get_ch();
		zn = arr_for_fraction[i].get_zn();
		sum += ch / zn;
	}
	cout << "Среднее значение: " << sum / (double)kd << endl;
	cout << endl;
}

//Задание 6
enum Suit { clubs, diamonds, hearts, spades };
const int jack = 11;
const int queen = 12;
const int king = 13;
const int ace = 14;

class card{
    private:
    int number;
    Suit suit;
    public:
    card(){}// конструктор
    void set ( int n, Suit s ) // установка значения
    {suit = s; number = n;}
    void display(); // показ карты
};

void card::display(){
    if ( number >= 2 && number <= 10 ){
        cout << number;
    }
    else{
        switch (number){
            case jack: cout << 'J'; break;
            case queen: cout << 'Q'; break;
            case king: cout << 'K'; break;
            case ace: cout << 'A'; break;
        }
    }
    switch (suit){
        case clubs: cout << static_cast<char>( 5 ); break;
        case diamonds: cout << static_cast<char>( 4 ); break;
        case hearts: cout << static_cast<char>( 3 ); break;
        case spades: cout << static_cast<char>( 6 ); break;
    }
}

void z6( ){
    zadanie(6);
    card deck [52];
    int j;
    cout << endl;
    for ( j = 0; j < 52; j++ ) // создаем упорядоченную колоду карт
    {
        int num = ( j % 13 ) + 2;
        Suit su = Suit ( j / 13 );
        deck [j].set(num, su);
    }
    // показываем исходную колоду
    cout << "Исходная колода:\n";
    for (j = 0; j < 52; j++){
        deck [j].display();
        cout << " ";
        if ( !( ( j + 1 ) % 13 ) ) // начинаем новую строку после каждой 13-й карты
        cout << endl;
    }
    srand(time(NULL)); // инициализируем генератор случайных чисел
    for (j = 0; j < 52; j++){
        int k = rand ( ) % 52; // выбираем случайную карту
        card temp = deck [j]; // и меняем ее с текущей
        deck[j] = deck[k];
        deck[k] = temp;
    }
    // показываем перемешанную колоду
    cout << "\nПеремешанная колода:\n";
    for (int j = 0; j < 52; j++){
        deck[j].display();
        cout << " ";
        if (!((j + 1) % 13)) // начинаем новую строку после каждой 13-й карты
        {
        cout << endl;
        }
    }
    cout << endl;
    cout << "Разделенная на 4 группы колода:\n";
    card pack_0[13], pack_1[13], pack_2[13], pack_3[13];
    for (int i = 0; i < 52; i++){
        if (i <= 12){
            pack_0[i % 13] = deck[i];
        }
        else{
            if (i <= 25){
                pack_1[i % 13] = deck[i];
            }
            else{
                if (i <= 38){
                    pack_2[i % 13] = deck[i];
                }
                else{
                    pack_3[i % 13] = deck[i];
                }
            }
        }
    }
    for (int i = 0; i < 52; i++){
        if (i <= 12){
            if (i == 0){
                cout << "Группа карт №1:";
            }
            cout << ' ';
            pack_0[i % 13].display();
        }
        else{
            if (i <= 25){
                if (i == 13){
                    cout << "\nГруппа карт №2:";
                }
                cout << ' ';
                pack_1[i % 13].display();
            }
            else{
                if (i <= 38){
                    if (i == 26){
                        cout << "\nГруппа карт №3:";
                    }
                    cout << ' ';
                    pack_2[i % 13].display();
                }
                else{
                    if (i == 39){
                        cout << "\nГруппа карт №4:";
                    }
                    cout << ' ';
                    pack_3[i % 13].display();
                }
            }
        }
    }
}

//Задание 7
class Money{
    private:
    long long int temp;
    public:
    long long int mstold(char *str){
        temp = 0;
        char str_temp[12];
        str_temp[11] = '\0';
        for (int i = 0, j = 0; i < 15; i++){
            if (str[i] == '$' || str[i] == '\'' || str[i] == '.'){
                continue;
            }
            str_temp[j] = str[i];
            j++;
        }
        temp = atoll(str_temp);
        return temp;
    }
    void ldtoms(double temp_sum){
        char str_sum[19];
        str_sum[18] = '\0';
        unsigned long int integer = 0, integer_temp = 0;
        for (int i = 0; i < 18; i++){
                switch (i){
                    case 0:
                    integer_temp = temp_sum * 100;
                    integer = integer_temp % 10;
                    break;
                case 1:
                    integer_temp = temp_sum * 10;
                    integer = integer_temp % 10;
                    break;
                default:
                    integer_temp = temp_sum;
                    integer = integer_temp % 10;
                    temp_sum /= 10;
                    break;
                }
            str_sum[i] = integer + 48;
            if ((int)temp_sum == 0){
                str_sum[i + 1] = '\0';
                cout << '$';
                char str_for_exit[30];
                int k = 3;
                str_for_exit[0] = str_sum[0];
                str_for_exit[1] = str_sum[1];
                str_for_exit[2] = '.';
                int c = 0;
                for (int j = 2; j <= i; j++){
                    if (j == i){
                        c++;
                        str_for_exit[k] = str_sum[j];
                    }
                    else{
                        c++;
                        str_for_exit[k++] = str_sum[j];
                    }
                    if (c % 3 == 0){
                        str_for_exit[k++] = '\'';
                        c = 0;
                    }
                }
            for (int h = k; h >= 0; h--){
                cout << str_for_exit[h];
            }
            cout << endl;
            break;
            }
        }
    }
};

void z7(){
    zadanie(7);
    Money mn;
    char str[] = "$123'480'706.29";
    long long int temp = mn.mstold(str);
    cout << '$' << temp / 100 << ',' << temp % 100 << endl;
    cout << endl;
}

//Задание 8
class Safearay{
    private:
    int LIMIT[100];
    bool checkind(int ind){
        if (ind >= 0 and ind < 100){
            return true;
        }
        else{
            return false;
        }
    }
    public:
    void putel(int ind, int val){
        if (checkind(ind)){
            LIMIT[ind] = val;
        }
        else{
            cout << "Ошибка! Индекс не принадлежит границам массива!";
            exit(0);
        }
    }
    int getel(int ind){
        if (checkind(ind)){
            return LIMIT[ind];
        }
        else{
            cout << "Ошибка! Индекс не принадлежит границам массива!";
            exit(0);
        }
    }
};

void z8(){
    zadanie(8);
    Safearay sfr;
    int val8, ind8;
    char b;
    do{
        cout << "Введите индекс(0-99): "; cin >>  ind8;
        cout << "Введите значение, которое будет присвоено этому индексу: ";
        cin >> val8;
        sfr.putel(ind8, val8);
        cout << "Ввести еще значение в массив? (y/n): "; cin >> b;
    }
    while(b != 'n');
    cout << "Введите индекс массива, значение которого необходимо получить: ";
    cin >> ind8;
    cout << "Значение введеного индекса: " << sfr.getel(ind8);
}

//Задание 9
class Queue{
private:
	enum { MAX = 10 };
	int st[MAX];
	int head=0, tail=-1;
public:
	void put(int var);
	int get();
};

void Queue::put(int var){
	if (tail == MAX-1)
	{
		st[tail++] = var;
		tail-=1;
	}
	else
	{
		st[++tail] = var;
	}
}
int Queue::get(){
	if (head == MAX-1)
	{
		return st[head++];
		head-=1;
	}
	else
		return st[head++];
}

void z9(){
	zadanie(9);
	Queue q1;
	q1.put(12);
	q1.put(23);
	q1.put(34);
	q1.put(45);
	q1.put(56);
	q1.put(67);
	q1.put(78);
	q1.put(89);
	q1.put(90);
	q1.put(10);
	cout << "1: " << q1.get() << endl;
	cout << "2: " << q1.get() << endl;
	cout << "3: " << q1.get() << endl;
	cout << "4: " << q1.get() << endl;
	cout << "5: " << q1.get() << endl;
	cout << "6: " << q1.get() << endl;
	cout << "7: " << q1.get() << endl;
	cout << "8: " << q1.get() << endl;
	cout << "9: " << q1.get() << endl;
	cout << "10: " << q1.get() << endl;

}

//Задание 10

//Задание 11

void z11(){
    zadanie(11);
    double val_for_11 = 0.0;
    cout << "Введите денежную сумму: $"; cin >> val_for_11;
    Money mn_for_11;
    mn_for_11.ldtoms(val_for_11);
    cout << endl;
}

int main(){
    z4(); z5(); z6(); z7(); z8(); z9(); z11();
}
