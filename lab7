#include<iostream>
using namespace std;

void zadanie(int a){
    cout << endl << "Задание №" << a << endl;
}

class Time{
    private:
    unsigned int hours, minutes, seconds;
    public:
    Time(){
        char sb = '0';
        cout << "Введите время (часы:минуты:секунды): ";
        cin >> hours >> sb >> minutes >> sb >> seconds;
    }
    void display(){
        cout << "Время: " << hours << ':' << minutes << ':' << seconds;
    }
    void operator+(Time& temp){
        unsigned int total_seconds = 0;
        total_seconds = 3600 * (hours + temp.hours) + 60 * (minutes + temp.minutes) +
        seconds + temp.seconds;
        hours = total_seconds / 3600;
        total_seconds -= hours * 3600;
        minutes = total_seconds / 60;
        total_seconds -= minutes * 60;
        seconds = total_seconds;
        cout << "Результат сложения: " << hours << ':' << minutes << ':' << seconds;
    }
    void operator-(Time& temp){
        unsigned int total_seconds = 0;
        total_seconds = 3600 * (hours - temp.hours) + 60 * (minutes - temp.minutes) +
        seconds - temp.seconds;
        hours = total_seconds / 3600;
        total_seconds -= hours * 3600;
        minutes = total_seconds / 60;
        total_seconds -= minutes * 60;
        seconds = total_seconds;
        cout << "Результат вычитания: " << hours << ':' << minutes << ':' << seconds;
    }
    void operator*(Time& temp){
        unsigned int total_seconds = 0;
        total_seconds = 3600 * (hours * temp.hours) + 60 * (minutes * temp.minutes) +
        seconds * temp.seconds;
        hours = total_seconds / 3600;
        total_seconds -= hours * 3600;
        minutes = total_seconds / 60;
        total_seconds -= minutes * 60;
        seconds = total_seconds;
        cout << "Результат умножения: " << hours << ':' << minutes << ':' << seconds;
    }
    // Прибавить 1:00:00
    Time& operator++(){ // Префикс
        hours++;
        return *this;
    }
    Time& operator++(int){ // Постфикс
        hours++;
        return *this;
    }
    // Отнять 1:00:00
    Time& operator--(){ // Префикс
        hours--;
        return *this;
    }
    Time& operator--(int){ // Постфикс
        hours--;
        return *this;
    }
};

class Fraction
{
    private:
    int num, den;
    public:
    void set(){
        char sb = '0';
        cout << "Введите дробь: "; cin >> num >> sb >> den;
    }
    void get(){
        cout << "Дробь = " << num << '/' << den << endl;
    }
    void operator+(Fraction& f){
        lowterms(num * f.den + den * f.num, den * f.den);
    }
    void operator-(Fraction& f){
        lowterms(num * f.den - den * f.num, den * f.den);
    }
    void operator*(Fraction& f){
        lowterms(num * f.num, den * f.den);
    }
    void operator/(Fraction& f){
        lowterms(num * f.den, den * f.num);
    }
    // Для числителя
    bool operator!=(const int& temp_num){
        if (num != temp_num){
            return true;
        }
        else{
            return false;
        }
    }
    // Для знаменателя
    bool operator==(const int& temp_den){
        if (den == temp_den){
            return true;
        }
        else{
            return false;
        }
    }
    void lowterms(int l_num, int l_den){ // Сокращение дроби
        long tnum, tden, temp, gcd;
        tnum = labs(l_num); // Используем неотрицательные значения
        tden = labs(l_den); // Нужен cmath
        if (tden == 0){ // Проверка знаменателя
        cout << "Недопустимый знаменатель";
        exit(1);
        }
        else
        if (tnum == 0){
            l_num = 0;
            l_den = 1;
            return;
        }
        // Нахождение наибольшего общего делителя
        while (tnum != 0){
            if (tnum < tden){ // Если числитель больше знаменателя, меняем их местами.
                temp = tnum;
                tnum = tden;
                tden = temp;
            }
            tnum = tnum - tden;
        }
        gcd = tden;// Делим числитель и знаменатель на НОД.
        l_num = l_num / gcd;
        l_den = l_den / gcd;
        cout << l_num << '/' << l_den << endl;
    }
};


void z5(){
    zadanie(5);
    Time t1;
    cout << "Время = "; t1.display(); cout << endl;
    cout << "Время++ = "; (t1++).display(); cout << endl;
    cout << "++Время = "; (++t1).display(); cout << endl;
    cout << "--Время = "; (--t1).display(); cout << endl;
    cout << "Время-- = "; (t1--).display(); cout << endl;
    cout << "Итоговое время = "; t1.display(); cout << endl;
    cout << endl;
}

void z6(){
    zadanie(6);
    Time t1,t2;
    cout << "Время2 = "; t2.display(); cout << endl;
    cout << "Время1 - Время2:\n "; t1 - t2; cout << endl;
    cout << "Время1 + Время2:\n "; t1 + t2; cout << endl;
    cout << "Время1 * Время2:\n "; t1 * t2; cout << endl;
}

void z7(){
    zadanie(7);
    Fraction f1, f2;
    char n;
    do{
        char sb = '0';
        f1.set();
        if (!(f1 != 0) && f1 == 1){
            break;
        }
        f2.set();
        if (!(f2 != 0) && f2 == 1){
            break;
        }
        cout << "Какую арифметическую операцию с дробями вы хотите сделать? "; cin
        >> sb;
        switch (sb){
            case '+': f1 + f2; break;
            case '-': f1 - f2; break;
            case '*': f1 * f2; break;
            case '/': f1 / f2; break;
            default:
            cout << "Ошибка! Такой операции нет\n";
            break;
        }
        cout << "Еще раз? (y/n): "; cin >> n;
    }
    while(n!='n');
    cout << endl;
}

int main(){
    z5(); z6(); z7();
}
